/* Importa a fonte Montserrat do Google Fonts */
@import url('https://fonts.googleapis.com/css2?family=Montserrat:wght@300;500;600;700&display=swap');

/* Zera o margin e padding de todos os elementos e define o box-sizing como border-box. Define a fonte Montserrat para todos os elementos. */
*{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: 'Montserrat', sans-serif;
}

/* Estilos para o body da página, definindo um fundo em degradê e centralizando o conteúdo usando flexbox. */
body{
    background-color: #c9d6ff;
    background: linear-gradient(to right, #e2e2e2, #c9d6ff);
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: column;
    height: 100vh;
}

/* Estilo para o "botão" de Home */
.home-button {
    position: absolute; /* Posiciona a imagem no topo da página */
    top: 20px; /* Ajuste vertical para o topo */
    left: 20px; /* Ajuste horizontal para a esquerda */
    max-width: 110px; /* Define o tamanho da imagem */
    height: auto;
    cursor: pointer; /* Simula que a imagem é um botão */
}

/* Container do card de login/cadastro */
.card-container {
    position: relative; /* Ponto de referência para o card */
}

/* Estilo do card e da imagem flutuante */
.card-wrapper {
    position: relative; /* Define o ponto de referência para a imagem */
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh; /* Faz o card ocupar a altura da tela */
}

.floating-image {
    position: absolute;
    top: 90px; /* Ajuste a posição superior conforme necessário */
    left: 0px; /* Posiciona a imagem à esquerda do container */
    width: 160px; /* Ajuste o tamanho da imagem */
    z-index: 10; /* Garante que a imagem fique sobre o container */
}

/* Define os estilos para o container, que possui um fundo branco, bordas arredondadas e sombra. O tamanho é responsivo. */
.container{
    background-color: #fff;
    border-radius: 30px;
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.35);
    position: relative;
    overflow: hidden;
    width: 850px;
    max-width: 100%;
    min-height: 550px;
}

/* Estilos para parágrafos dentro do container */
.container p{
    font-size: 14px;
    line-height: 20px;
    letter-spacing: 0.3px;
    margin: 20px 0;
}

/* Estilos para span dentro do container */
.container span{
    font-size: 12px;
}

/* Estilos para links dentro do container */
.container a{
    color: #333;
    font-size: 13px;
    text-decoration: none;
    margin: 15px 0 10px;
}

.terms-container {
    margin-top: 10px;
    font-size: 12px;
    display: flex;
    align-items: center; /* Alinha o checkbox e o texto verticalmente */
    gap: 8px; /* Espaço entre o checkbox e o texto */
}

.terms-container input[type="checkbox"] {
    margin-right: 5px;
}

.terms-container a {
    text-decoration: underline;
    color: #007bff;
}

.terms-container label {
    cursor: pointer;
    line-height: 1.5; /* Ajusta a altura da linha para alinhar o texto com o checkbox */
}

button {
    margin-top: 15px; /* Aumenta o espaço acima do botão */
    width: 100%; /* Faz o botão ocupar toda a largura do formulário */
}

/* Estilos para botões dentro do container */
.container button{
    background-color: #092B43;
    color: #fff;
    font-size: 12px;
    padding: 10px 45px;
    border: 1px solid transparent;
    border-radius: 8px;
    font-weight: 600;
    letter-spacing: 0.5px;
    text-transform: uppercase;
    margin-top: 10px;
    cursor: pointer;
}

/* Estilo adicional para botões com a classe 'hidden' */
.container button.hidden{
    background-color: transparent;
    border-color: #fff;
}

/* Estilos para formulários dentro do container */
.container form{
    background-color: #fff;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: column;
    padding: 0 40px;
    height: 100%;
}

/* Estilos para inputs dentro do container */
.container input{
    background-color: #eee;
    border: none;
    margin: 8px 0;
    padding: 10px 15px;
    font-size: 13px;
    border-radius: 8px;
    width: 100%;
    outline: none;
}

/* Define o estilo base da transição entre formulários, a classe form-container controla isso */
.form-container{
    position: absolute;
    top: 0;
    height: 100%;
    transition: all;
}

/* Estilos específicos para o formulário de login */
.sign-in{
    left: 0;
    width: 50%;
    z-index: 2;
}

/* Quando o container tem a classe 'active', o formulário de login é movido para fora da tela */
.container.active .sign-in{
    transform: translateX(100%);
}

/* Estilos para o formulário de cadastro */
.sign-up{
    left: 0;
    width: 50%;
    opacity: 0;
    z-index: 1;
}

/* Quando o container está ativo, o formulário de cadastro aparece e ganha animação */
.container.active .sign-up{
    transform: translateX(100%);
    opacity: 1;
    z-index: 5;
    animation: move 0.6s;
}

/* Animação para fazer a transição entre os dois formulários */
@keyframes move{
    0%, 49.99%{
        opacity: 0;
        z-index: 1;
    }
    50%, 100%{
        opacity: 1;
        z-index: 5;
    }
}

/* Estilos para os ícones de redes sociais */
.social-icons{
    margin: 20px 0;
}

/* Estilos para links de redes sociais */
.social-icons a{
    border: 1px solid #ccc;
    border-radius: 20%;
    display: inline-flex;
    justify-content: center;
    align-items: center;
    margin: 0 3px;
    width: 40px;
    height: 40px;
}

/* Contêiner que controla o botão de alternância entre login e cadastro */
.toggle-container{
    position: absolute;
    top: 0;
    left: 50%;
    width: 50%;
    height: 100%;
    overflow: hidden;
    transition: all 0.6s ease-in-out;
    border-radius: 150px 0 0 100px;
    z-index: 1000;
}

/* Quando o container está ativo, o contêiner de alternância se move para a esquerda */
.container.active .toggle-container{
    transform: translateX(-100%);
    border-radius: 0 150px 100px 0;
}

/* Estilos para o botão de alternância (lado visual do switch entre login/cadastro) */
.toggle{
    background-color: #092B43;
    height: 100%;
    background: Linear-gradient(to right, #092B43, #092B43);
    color: #fff;
    position: relative;
    left: -100%;
    width: 100%;
    width: 200%;
    transform: translateX(0);
    transition: all 0.6s ease-in-out;
}

/* Quando o container está ativo, o botão de alternância se move */
.container.active .toggle{
    transform: translateX(50%);
}

/* Estilos para os painéis de alternância (informações que acompanham o botão de alternância) */
.toggle-panel{
    position: absolute;
    width: 50%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: column;
    padding: 0 30px;
    text-align: center;
    top: 0;
    transform: translateX(0);
    transition: all 0.6s ease-in-out;
}

/* Estilos para o painel à esquerda do toggle, que inicialmente está fora da tela */
.toggle-left{
    transform: translateX(-200%);
}

/* Quando o container está ativo, o painel esquerdo é mostrado */
.container.active .toggle-left{
    transform: translateX(0);
}

/* Estilos para o painel à direita do toggle */
.toggle-right{
    right: 0;
    transform: translateX(0);
}

/* Quando o container está ativo, o painel direito é movido para fora da tela */
.container.active .toggle-right{
    transform: translateX(200%);
}